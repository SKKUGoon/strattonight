// Code generated by ent, DO NOT EDIT.

package streamrequest

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the streamrequest type in the database.
	Label = "stream_request"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRequestID holds the string denoting the request_id field in the database.
	FieldRequestID = "request_id"
	// FieldRequestType holds the string denoting the request_type field in the database.
	FieldRequestType = "request_type"
	// FieldIsActive holds the string denoting the is_active field in the database.
	FieldIsActive = "is_active"
	// Table holds the table name of the streamrequest in the database.
	Table = "stream_request"
)

// Columns holds all SQL columns for streamrequest fields.
var Columns = []string{
	FieldID,
	FieldRequestID,
	FieldRequestType,
	FieldIsActive,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the StreamRequest queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRequestID orders the results by the request_id field.
func ByRequestID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRequestID, opts...).ToFunc()
}

// ByRequestType orders the results by the request_type field.
func ByRequestType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRequestType, opts...).ToFunc()
}

// ByIsActive orders the results by the is_active field.
func ByIsActive(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIsActive, opts...).ToFunc()
}
